@import url(https://fonts.googleapis.com/css?family=Raleway:300,400,600);@import url(https://fonts.googleapis.com/css?family=Laila|Fasthand);@import url(https://fonts.googleapis.com/css?family=Abel|Economica);@charset "UTF-8";





/* Main color */

/* Background color
 ----------------------------------------- */

/* Width
 ----------------------------------------- */

/* Section padding & margin
  ----------------------------------------- */

/* Font */

/* Font family */

/** Helper @mixin function **/

/***************************/

/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */

/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */



html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */

html,
body,
div,
span,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
abbr,
address,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
samp,
small,
strong,
sub,
sup,
var,
b,
i,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
summary,
time,
mark,
audio,
video,
main {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}

/**
 * Set zoom value
 */

div,
h1,
h2,
h3,
h4,
h5,
h6,
ul,
ol,
li,
dl,
dt,
dd,
table,
th,
td,
form,
fieldset,
legend,
header,
footer,
nav,
section,
main {
  zoom: 1;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
  margin: 0px;
  padding: 0px;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */

audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */

[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * Remove the gray background color from active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */

a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */

abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */

b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */

dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */

mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove border when inside `a` element in IE 8/9/10.
 */

img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * Address differences between Firefox and other browsers.
 */

hr {
  box-sizing: content-box;
  height: 0;
  border: 0;
  height: 1px;
  padding: 0;
  border-top: 1px solid #dddddd;
}

/**
 * Contain overflow in all browsers.
 */

pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */

/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */

button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */

button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */

input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */

textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */

optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* -------------------------------------------------------------------------

		util.sass
		
		案件に依存せず汎用的に使うClassを定義
		
------------------------------------------------------------------------- */

/* float clear
------------------------------------------------- */

/*for modern browser*/

.clear_fix:after {
  content: ".";
  display: block;
  height: 0;
  clear: both;
  font-size: 0;
  line-height: 0;
  visibility: hidden;
}

/*for IE 5.5-7*/

.clear_fix {
  zoom: 1;
}

.clear_both {
  clear: both;
  height: 1px;
  font-size: 1px;
  text-align: center;
  line-height: 0;
}

.clear {
  clear: both;
}

/* float
------------------------------------------------- */

.float_r {
  float: right;
  display: inline;
}

.float_l {
  float: left;
  display: inline;
}

/* text align
-------------------------------------------------- */

.text_center {
  text-align: center !important;
}

.text_left {
  text-align: left !important;
}

.text_right {
  text-align: right !important;
}

/* font family
----------------------------------------------------- */

/* Text underline */

.underline {
  border-bottom: 1px solid #999;
}

/* visibility of element */

.show_sm {
  display: none !important;
  visibility: hidden !important;
}

/* グリッドレイアウト用mixin (IE8以上)
usage:
■12分割で間隔が20pxのグリッドのクラスを作る場合
・SASS
@include grid_system(12, 20px);
・HTML
<div class="grid_system_12">  ← このdivへの幅指定はNG
	<div class="grid_6"></div> ┐
	<div class="grid_3"></div> ├ 子要素は合計が12になるようにクラス名を付ける
	<div class="grid_3"></div> ┘
</div>
------------------------------------------------- */

*,
*:after,
*::before {
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
}

html {
  background: none;
  background-image: none;
}

body {
  position: relative;
  background: #fafafa;
  font-family: "Raleway", sans-serif;
  font-size: 14px;
  font-weight: 300;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;
  letter-spacing: 0;
  word-wrap: break-word;
  overflow-wrap: break-word;
}

.page-wrapper {
  position: relative;
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
  padding: 0;
  top: 0;
  height: 100vh;
}

.sidebar {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 100;
  width: 300px;
  height: 100vh;
  background: #353848;
}

.sidebar .inner {
  position: relative;
  top: 0;
  bottom: 0;
  left: 0;
  z-index: 1001;
  width: 300px;
  height: 100%;
  max-width: 100%;
  background: #fff;
  box-shadow: 0 2px 2px rgba(204, 197, 185, 0.5);
  /* overflow-y: auto; */
  /* -webkit-overflow-scrolling: touch;
	    -ms-scroll-chaining: none;
	    overflow-scrolling: touch; */
}

.sidebar .inner::after {
  clear: both;
  content: "";
  display: block;
}

.sidebar .sidebar-heading {
  float: left;
  width: 100%;
  position: relative;
  text-align: center;
  padding: 4px 5px;
  margin-bottom: 10px;
  background: rgba(249, 212, 35, 0.7);
}

.sidebar .sidebar-heading h3 {
  margin: 0;
  font-size: 40px;
  color: #263959;
  font-weight: 800;
  font-family: 'Fasthand', serif;
}

.sidebar .sidebar-heading h3 span {
  display: block;
  font-family: 'Laila', serif;
  font-weight: 700;
  font-size: 13px;
  margin-top: -11px;
}

.sidebar .main-nav {
  float: left;
  width: 100%;
  position: relative;
  height: calc(100% - 81px);
  overflow-y: scroll;
  /* .uk-dropdown-nav{
			transform: translate3d(0px, -40px, 0px);
    		transition: all 0.3s cubic-bezier(0.215, 0.61, 0.355, 1) 0s, opacity 0.3s ease 0s, height 0s linear 0.35s;
		} */
}

.sidebar .main-nav ul {
  position: relative;
  display: block;
  float: left;
  width: 100%;
  margin-bottom: 50px;
  padding: 0;
  list-style-type: none;
}

.sidebar .main-nav li {
  float: left;
  width: 100%;
  display: block;
  position: relative;
}

.sidebar .main-nav a {
  text-decoration: none;
  display: block;
  padding: 13px 10px 13px 20px;
  color: #817b73;
  font-size: 14px;
  font-weight: 600;
  text-align: left;
  text-transform: uppercase;
  line-height: 1;
  text-shadow: 1px 1px 1px rgba(197, 198, 182, 0.2);
  transition: all 0.3s ease;
}

.sidebar .main-nav a:hover {
  color: #66615b;
}

.sidebar .main-nav a:hover ~ .dropdown-nav {
  opacity: 1;
  filter: alpha(opacity=100);
  visibility: visible;
}

.sidebar .main-nav a.active {
  color: #EB5E28;
}

.sidebar .main-nav a i {
  margin-right: 15px;
  font-weight: 300;
  font-size: 1.5em;
  vertical-align: middle;
}

.sidebar .dropdown-nav {
  background: #fffcf5;
  border: 0 none;
  border-radius: 6px;
  display: block;
  margin-top: -10px;
  padding: 0px;
  position: absolute;
  left: 20px;
  width: 240px;
  visibility: hidden;
  z-index: 9000;
  opacity: 0;
  filter: alpha(opacity=0);
  box-shadow: 0 0px rgba(17, 16, 15, 0.1), 0 1px 3px rgba(17, 16, 15, 0.1);
  transition: all 0.3s cubic-bezier(0.215, 0.61, 0.355, 1) 0s, opacity 0.3s ease 0s, height 0s linear 0.35s;
}

.sidebar .dropdown-nav:hover {
  opacity: 1;
  filter: alpha(opacity=100);
  visibility: visible;
}

.sidebar .dropdown-nav:after,
.sidebar .dropdown-nav:before {
  border-bottom: 11px solid #F1EAE0;
  border-left: 11px solid transparent;
  border-right: 11px solid transparent;
  content: "";
  display: inline-block;
  position: absolute;
  right: 12px;
  top: -11px;
}

.sidebar .dropdown-nav ul {
  margin: 0;
}

.sidebar .dropdown-nav a {
  font-size: 12px;
  padding: 15px;
}

.sidebar .dropdown-nav a:hover {
  background: rgba(0, 0, 0, 0.03);
}

.sidebar .dropdown-nav a i {
  font-size: 1.7em;
}

.sidebar li.open .dropdown-nav {
  opacity: 1;
  filter: alpha(opacity=100);
  visibility: visible;
}

.main-panel {
  position: relative;
  height: 100vh;
  width: calc(100% - 300px);
  left: 300px;
  background: #dedcee;
  overflow: auto;
}

.card {
  border-radius: 6px;
  box-shadow: 0 2px 2px rgba(204, 197, 185, 0.5);
  background-color: #FFFFFF;
  color: #252422;
  margin-bottom: 20px;
  position: relative;
  z-index: 1;
}

.card .icon-big {
  font-size: 3em;
}

.card .icon-blue {
  color: #7AC29A;
}

.card .content {
  position: relative;
  padding: 15px 15px 10px 15px;
}

.card .content .number {
  font-size: 1.7em;
  text-align: right;
  font-weight: 500;
}

.card .content .number p {
  font-size: 13px;
  font-weight: 600;
  text-transform: uppercase;
  text-align: right;
}

.card .card-footer {
  position: relative;
}

.card .card-footer hr {
  margin-top: 5px;
  margin-bottom: 5px;
}

.card .card-header {
  padding: 20px;
}

.card .card-header .title {
  font-size: 1.5em;
  text-transform: uppercase;
  font-weight: 400;
  color: #4e4d4f;
}

.card .card-header .title-span {
  display: block;
  color: #e1e4e5;
}

.card .chart {
  margin: 30px 0 30px;
  height: 245px;
}

.card-transparent {
  border-radius: 0;
  box-shadow: none;
  background: transparent;
}

.chart-line .label,
.chart-bar .label {
  display: block;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.header {
  width: calc(100% - 300px);
  height: 71px;
  /* background: rgba(#f6ea8c, 0.05); */
  background: #fff;
  position: fixed;
  z-index: 1000;
  margin-bottom: 40px;
  border-bottom: 1px solid #E0E3DA;
}

.header > div {
  height: 100%;
}

.header .breadcrum {
  position: relative;
  height: 71px;
  line-height: 1;
}

.header .breadcrum .inner {
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.header .breadcrum h2 {
  font-size: 1.3em;
  margin: 0;
  text-transform: uppercase;
  color: #817b73;
}

.header .navbar-nav {
  position: relative;
  height: 100%;
}

.header .navbar-nav ul {
  list-style-type: none;
  display: inline-block;
  right: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  position: absolute;
  margin: 0;
  padding: 0;
}

.header .navbar-nav li {
  display: inline;
  margin-left: 30px;
}

.header .navbar-nav a {
  text-decoration: none;
  color: #817b73;
  font-size: 16px;
  font-weight: 500;
}

.header .navbar-nav a i {
  margin-right: 5px;
}

.badge-yellow {
  background: #f9d423;
}

/*
 * Custom scrollbar style
*/

::-webkit-scrollbar {
  width: 0.5em;
  height: 0.5em;
}

::-webkit-scrollbar-thumb {
  background: rgba(0, 0, 0, 0.3);
  border-radius: 5px;
}

::-webkit-scrollbar-track {
  background: rgba(217, 217, 217, 0.65);
}

body {
  scrollbar-face-color: rgba(0, 0, 0, 0.3);
  scrollbar-track-color: rgba(217, 217, 217, 0.65);
}

.img-responsive {
  position: relative;
  display: block;
  width: 100%;
  vertical-align: bottom;
}

/* Section heading title */

.section-heading {
  float: left;
  width: 100%;
  padding: 20px 0 10px 0;
}

.section-heading h1 {
  margin: 0;
  position: relative;
  display: inline-block;
  text-transform: uppercase;
  font-family: "Abel", sans-serif;
  font-weight: 400;
  font-size: 1.8em;
  color: #444343;
  letter-spacing: -1px;
  word-spacing: 2px;
}

.section-heading h1:after {
  display: block;
  position: relative;
  content: "";
  height: 2px;
  background: #505050;
  bottom: 0;
}

/* Chartist JS*/

.ct-blue {
  stroke: #7A9E9F !important;
}

.ct-azure {
  stroke: #68B3C8 !important;
}

.ct-green {
  stroke: #7AC29A !important;
}

.ct-orange {
  stroke: #F3BB45 !important;
}

.ct-red {
  stroke: #EB5E28 !important;
}

.ct-chart-legend .text-primary,
.chart-legend .text-primary:hover {
  color: #7A9E9F;
}

.ct-chart-legend .text-info,
.chart-legend .text-info:hover {
  color: #68B3C8;
}

.ct-chart-legend .text-success,
.chart-legend .text-success:hover {
  color: #7AC29A;
}

.ct-chart-legend .text-warning,
.chart-legend .text-warning:hover {
  color: #F3BB45;
}

.ct-chart-legend .text-danger,
.chart-legend .text-danger:hover {
  color: #EB5E28;
}

.ct-label {
  fill: rgba(0, 0, 0, 0.4);
  color: black;
  font-size: 0.9em;
  line-height: 1;
}

.ct-chart-line .ct-label,
.ct-chart-bar .ct-label {
  display: block;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.ct-label.ct-horizontal.ct-start {
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: flex-start;
  -ms-flex-pack: flex-start;
  justify-content: flex-start;
  text-align: left;
  text-anchor: start;
}

.ct-label.ct-horizontal.ct-end {
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-box-pack: flex-start;
  -ms-flex-pack: flex-start;
  justify-content: flex-start;
  text-align: left;
  text-anchor: start;
}

.ct-label.ct-vertical.ct-start {
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: flex-end;
  -ms-flex-pack: flex-end;
  justify-content: flex-end;
  text-align: right;
  text-anchor: end;
}

.ct-label.ct-vertical.ct-end {
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: flex-start;
  -ms-flex-pack: flex-start;
  justify-content: flex-start;
  text-align: left;
  text-anchor: start;
}

.ct-chart-bar .ct-label.ct-horizontal.ct-start {
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  text-align: center;
  text-anchor: start;
}

.ct-chart-bar .ct-label.ct-horizontal.ct-end {
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  text-align: center;
  text-anchor: start;
}

.ct-chart-bar.ct-horizontal-bars .ct-label.ct-horizontal.ct-start {
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: flex-start;
  -ms-flex-pack: flex-start;
  justify-content: flex-start;
  text-align: left;
  text-anchor: start;
}

.ct-chart-bar.ct-horizontal-bars .ct-label.ct-horizontal.ct-end {
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-box-pack: flex-start;
  -ms-flex-pack: flex-start;
  justify-content: flex-start;
  text-align: left;
  text-anchor: start;
}

.ct-chart-bar.ct-horizontal-bars .ct-label.ct-vertical.ct-start {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: flex-end;
  -ms-flex-pack: flex-end;
  justify-content: flex-end;
  text-align: right;
  text-anchor: end;
}

.ct-chart-bar.ct-horizontal-bars .ct-label.ct-vertical.ct-end {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: flex-start;
  -ms-flex-pack: flex-start;
  justify-content: flex-start;
  text-align: left;
  text-anchor: end;
}

.ct-grid {
  stroke: rgba(0, 0, 0, 0.2);
  stroke-width: 1px;
  stroke-dasharray: 2px;
}

.ct-point {
  stroke-width: 10px;
  stroke-linecap: round;
}

.ct-line {
  fill: none;
  stroke-width: 4px;
}

.ct-area {
  stroke: none;
  fill-opacity: 0.7;
}

.ct-bar {
  fill: none;
  stroke-width: 10px;
}

.ct-slice-donut {
  fill: none;
  stroke-width: 60px;
}

.ct-series-a .ct-point,
.ct-series-a .ct-line,
.ct-series-a .ct-bar,
.ct-series-a .ct-slice-donut {
  stroke: #68B3C8;
}

.ct-series-a .ct-slice-pie,
.ct-series-a .ct-area {
  fill: #68B3C8;
}

.ct-series-b .ct-point,
.ct-series-b .ct-line,
.ct-series-b .ct-bar,
.ct-series-b .ct-slice-donut {
  stroke: #F3BB45;
}

.ct-series-b .ct-slice-pie,
.ct-series-b .ct-area {
  fill: #F3BB45;
}

.ct-series-c .ct-point,
.ct-series-c .ct-line,
.ct-series-c .ct-bar,
.ct-series-c .ct-slice-donut {
  stroke: #EB5E28;
}

.ct-series-c .ct-slice-pie,
.ct-series-c .ct-area {
  fill: #EB5E28;
}

.ct-series-d .ct-point,
.ct-series-d .ct-line,
.ct-series-d .ct-bar,
.ct-series-d .ct-slice-donut {
  stroke: #7AC29A;
}

.ct-series-d .ct-slice-pie,
.ct-series-d .ct-area {
  fill: #7AC29A;
}

.ct-series-e .ct-point,
.ct-series-e .ct-line,
.ct-series-e .ct-bar,
.ct-series-e .ct-slice-donut {
  stroke: #7A9E9F;
}

.ct-series-e .ct-slice-pie,
.ct-series-e .ct-area {
  fill: #7A9E9F;
}

.ct-series-f .ct-point,
.ct-series-f .ct-line,
.ct-series-f .ct-bar,
.ct-series-f .ct-slice-donut {
  stroke: rgba(104, 179, 200, 0.8);
}

.ct-series-f .ct-slice-pie,
.ct-series-f .ct-area {
  fill: rgba(104, 179, 200, 0.8);
}

.ct-series-g .ct-point,
.ct-series-g .ct-line,
.ct-series-g .ct-bar,
.ct-series-g .ct-slice-donut {
  stroke: rgba(122, 194, 154, 0.8);
}

.ct-series-g .ct-slice-pie,
.ct-series-g .ct-area {
  fill: rgba(122, 194, 154, 0.8);
}

.ct-series-h .ct-point,
.ct-series-h .ct-line,
.ct-series-h .ct-bar,
.ct-series-h .ct-slice-donut {
  stroke: rgba(243, 187, 69, 0.8);
}

.ct-series-h .ct-slice-pie,
.ct-series-h .ct-area {
  fill: rgba(243, 187, 69, 0.8);
}

.ct-series-i .ct-point,
.ct-series-i .ct-line,
.ct-series-i .ct-bar,
.ct-series-i .ct-slice-donut {
  stroke: rgba(235, 94, 40, 0.8);
}

.ct-series-i .ct-slice-pie,
.ct-series-i .ct-area {
  fill: rgba(235, 94, 40, 0.8);
}

.ct-series-j .ct-point,
.ct-series-j .ct-line,
.ct-series-j .ct-bar,
.ct-series-j .ct-slice-donut {
  stroke: rgba(122, 158, 159, 0.8);
}

.ct-series-j .ct-slice-pie,
.ct-series-j .ct-area {
  fill: rgba(122, 158, 159, 0.8);
}

.ct-series-k .ct-point,
.ct-series-k .ct-line,
.ct-series-k .ct-bar,
.ct-series-k .ct-slice-donut {
  stroke: rgba(104, 179, 200, 0.6);
}

.ct-series-k .ct-slice-pie,
.ct-series-k .ct-area {
  fill: rgba(104, 179, 200, 0.6);
}

.ct-series-l .ct-point,
.ct-series-l .ct-line,
.ct-series-l .ct-bar,
.ct-series-l .ct-slice-donut {
  stroke: rgba(122, 194, 154, 0.6);
}

.ct-series-l .ct-slice-pie,
.ct-series-l .ct-area {
  fill: rgba(122, 194, 154, 0.6);
}

.ct-series-m .ct-point,
.ct-series-m .ct-line,
.ct-series-m .ct-bar,
.ct-series-m .ct-slice-donut {
  stroke: rgba(243, 187, 69, 0.6);
}

.ct-series-m .ct-slice-pie,
.ct-series-m .ct-area {
  fill: rgba(243, 187, 69, 0.6);
}

.ct-series-n .ct-point,
.ct-series-n .ct-line,
.ct-series-n .ct-bar,
.ct-series-n .ct-slice-donut {
  stroke: rgba(235, 94, 40, 0.6);
}

.ct-series-n .ct-slice-pie,
.ct-series-n .ct-area {
  fill: rgba(235, 94, 40, 0.6);
}

.ct-series-o .ct-point,
.ct-series-o .ct-line,
.ct-series-o .ct-bar,
.ct-series-o .ct-slice-donut {
  stroke: rgba(122, 158, 159, 0.6);
}

.ct-series-o .ct-slice-pie,
.ct-series-o .ct-area {
  fill: rgba(122, 158, 159, 0.6);
}

/* Registration Form */

.custom-form {
  position: relative;
  width: 100%;
}

.custom-form::after {
  clear: both;
  content: "";
  display: block;
}

.custom-btn-cancel,
.custom-btn-submit {
  position: relative;
  display: inline-block;
  border: 1px solid #dedede;
  padding: 0.7em 1.8em;
  font-weight: 700;
  font-size: 1.3em;
  border-radius: 5px;
  transition: all 0.15s ease-in-out;
}

.custom-btn-cancel {
  background: rgba(251, 209, 75, 0.9);
  color: #817b73;
}

.custom-btn-cancel:hover {
  background: #facb32;
}

.custom-btn-submit {
  float: right;
  background: rgba(78, 161, 211, 0.8);
  color: #f1f1f1;
}

.custom-btn-submit:hover {
  background: #4ea1d3;
}

.custom-form-group {
  width: 100%;
  padding: 15px 0;
}

.custom-form-group::after {
  clear: both;
  content: "";
  display: block;
}

.custom-form-group .selectize-control.multi .selectize-input > div.item {
  background: #75D701;
  border-radius: 5px;
  color: #f1f1f1;
}

.custom-input-text {
  width: 100%;
  border: 1px solid #dedede;
  border-radius: 5px;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.1);
  font-size: 16px;
  color: #817b73;
  height: 3em;
  padding: 0.78em 0.88em;
  font-weight: 600;
}

.custom-input-text::-webkit-input-placeholder {
  color: #d5d5d5;
}

.custom-input-text::-moz-input-placeholder {
  color: #d5d5d5;
}

.custom-input-textarea {
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  border: 1px solid #dedede;
  border-radius: 5px;
  min-height: 245px;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.1);
}

.custom-input-select {
  position: relative;
  width: 100%;
  outline: none;
  border: 1px solid #eee;
  background: #fff;
  padding: 0.7em 0.5em;
  font-size: 1.1em;
  font-weight: 600;
  color: #817b73;
  line-height: 1;
  -webkit-appearance: none;
  -moz-apperance: none;
  apperance: none;
}

.custom-input-select::-ms-expand {
  display: none;
}

.custom-input-select option {
  outline: none;
  -webkit-appearance: none;
  -moz-apperance: none;
  apperance: none;
  border: 1px solid #dedede;
  font-size: 1.2em;
  background: #faf9f9;
  color: #817b73;
}

.media_-select,
.category-select {
  position: relative;
  float: left;
}

.media_-select:before,
.category-select:before {
  position: absolute;
  display: block;
  content: "\f107";
  font: normal normal normal 18px/1 FontAwesome;
  z-index: 1;
  color: #817b73;
  right: 0.4em;
  top: 50%;
  pointer-events: none;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
}

.category-select select {
  border-radius: 0 5px 5px 0;
}

.media_-select {
  min-width: 70px;
  max-width: 70px;
}

.media_-select select {
  border-radius: 5px 0 0 5px;
}

.input-radio-wrapper {
  position: relative;
  width: 100%;
  height: 30px;
  text-align: left;
}

.input-radio-wrapper::after {
  clear: both;
  content: "";
  display: block;
}

.input-radio-wrapper .custom-input-radio {
  visibility: hidden;
  position: relative;
  display: block;
  width: 30px;
  height: 30px;
  top: 0;
  float: left;
  margin-left: 15px;
  cursor: pointer;
}

.input-radio-wrapper .custom-input-radio:before {
  position: absolute;
  display: block;
  width: 30px;
  height: 30px;
  content: " ";
  border-radius: 50%;
  border: 2px solid #6d7280;
  top: 0;
  visibility: visible;
  cursor: pointer;
}

.input-radio-wrapper .custom-input-radio:after {
  position: absolute;
  display: block;
  width: 0px;
  height: 0px;
  left: 6px;
  top: 6px;
  opacity: 0;
  background: #0080ff;
  content: " ";
  border-radius: 50%;
  visibility: visible;
  -webkit-transform-origin: 50% 50%;
          transform-origin: 50% 50%;
  transition: all 0.1s cubic-bezier(0.215, 0.61, 0.355, 1) 0s, opacity 0.1s ease 0s, height 0s linear 0.2s, width 0s linear 0.2s;
}

.input-radio-wrapper .custom-input-radio:checked:before {
  border: 2px solid rgba(62, 65, 73, 0.5);
}

.input-radio-wrapper .custom-input-radio:checked:after {
  opacity: 1;
  width: 18px;
  height: 18px;
}

.input-radio-wrapper label {
  position: relative;
  line-height: 30px;
  font-size: 16px;
  color: #817b73;
  height: 30px;
  float: left;
  cursor: pointer;
  display: inline-block;
}

.file-input-wrapper {
  position: relative;
  width: 100%;
}

.file-input-wrapper::after {
  clear: both;
  content: "";
  display: block;
}

.custom-upload-btn {
  outline: none;
  border: 1px solid #eee;
  color: #fff;
  padding: 7px 30px;
  border-radius: 5px;
  font-weight: 600;
  font-size: 1.2em;
  transition: all 0.22s ease-out;
}

.custom-upload-btn i {
  margin-right: 10px;
  font-size: 1.4em;
  vertical-align: middle;
}

.custom-upload-btn.image {
  background: rgba(229, 58, 64, 0.8);
}

.custom-upload-btn.image:hover {
  outline: 3px solid #fad8d9;
  border-radius: 0;
  background: #e53a40;
}

.custom-upload-btn.sound {
  background: rgba(216, 17, 89, 0.8);
}

.custom-upload-btn.sound:hover {
  outline: 3px solid #f8a4c2;
  border-radius: 0;
  background: #d81159;
}

.custom-upload-btn.video {
  background: rgba(214, 64, 114, 0.9);
}

.custom-upload-btn.video:hover {
  outline: 3px solid #f6d3de;
  border-radius: 0;
  background: #d64072;
}

.imagePreview {
  position: relative;
  margin-top: 20px;
  min-height: 130px;
  background: rgba(207, 170, 158, 0.2);
  border: 1px solid #dedede;
}

.imagePreview p {
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
  text-align: center;
  font-size: 1.5em;
  color: #dedede;
  font-weight: 600;
  display: block;
}

.imagePreview img {
  max-width: 100%;
  width: 100%;
  position: relative;
  display: block;
  display: block;
}

.avoid-click-overlay {
  position: absolute;
  z-index: 100;
  top: 0;
  left: 0;
  background: rgba(218, 233, 244, 0.4);
  visibility: hidden;
  right: 0;
  bottom: 0;
  pointer-events: none !important;
}

.avoid-click-overlay .uk-icon.uk-spinner {
  position: absolute;
  left: 50%;
  top: 77px;
  -webkit-transform: translateX(-50%);
  transform: translateX(-50%);
}

/* Sidebar advanced options form */

.sidebar-form-advance {
  position: relative;
  min-width: 200px;
  max-width: 250px;
  width: 250px;
  background: #fff;
  border-left: 1px solid #d5d5d5;
}

.sidebar-form-advance.avoid-click .avoid-click-overlay {
  z-index: 1000;
  visibility: visible !important;
}

.sidebar-form-advance .advance-options {
  padding: 0 10px 30px 10px;
}

.clearfix::after {
  clear: both;
  content: "";
  display: block;
}

.form-title {
  position: relative;
  font-size: 2em;
  font-family: 'Laila', serif;
  padding: 20px;
  letter-spacing: 0em;
  font-weight: 500;
  color: #817b73;
}

.form-title span {
  display: block;
  font-size: 13px;
  color: primary_font_color;
  text-transform: capitalize;
}

.heading {
  position: relative;
  width: 100%;
  background: #f9fafa;
  border-bottom: 5px solid #f6f8f8;
}

.heading h2 {
  text-align: center;
  padding: 15px 7px;
  font-size: 1.3em;
  font-weight: 500;
  color: #817b73;
  text-transform: capitalize;
}

.header-gap {
  position: relative;
  width: 100%;
  padding: 35px 0;
}

.padding-top-sm {
  padding-top: 30px !important;
}

/* Custom table list view */

.custom-table-wrapper {
  position: relative;
  width: 100%;
}

.custom-table-wrapper::after {
  clear: both;
  content: "";
  display: block;
}

.custom-table.uk-table td {
  vertical-align: middle;
  position: relative;
}

.custom-table.uk-table th {
  color: #f1f1f1;
  text-align: left;
}

.custom-table.uk-table thead {
  background: #2ecc71;
}

.custom-table.uk-table tbody tr {
  border-bottom: 1px solid #eee;
  background-color: #fff;
}

button.action-btn i {
  font-size: 1.5em;
  color: #a79c8e;
}

button.action-btn {
  outline: none;
  background: transparent;
  border: none;
}

.action-box {
  position: absolute;
  top: 0;
  padding: 20px 0;
  left: -150px;
  z-index: 1;
  visibility: hidden;
  opacity: 0;
  -webkit-transform: scale(0.2, 0.2);
  transform: scale(0.2, 0.2);
  transition: -webkit-transform 0.2s ease;
  transition: transform 0.2s ease;
  transition: transform 0.2s ease, -webkit-transform 0.2s ease;
}

.action-box li {
  list-style-type: none;
  display: block;
  padding: 10px 30px;
  cursor: pointer;
}

.action-box li:hover {
  background: #f1f1f1;
}

.action-box.visible {
  visibility: visible;
  opacity: 1;
  -webkit-transform: scale(1, 1);
          transform: scale(1, 1);
}

body {
  background: #dfdfdf;
  color: #666;
  font: 14px/24px sans-serif;
}

.btn {
  display: inline-block;
  padding: 10px;
  border-radius: 5px;
  /*optional*/
  color: #aaa;
  font-size: .875em;
}

.pagination {
  background: #f2f2f2;
  padding: 20px;
  margin-bottom: 20px;
}

.page {
  display: inline-block;
  padding: 0px 9px;
  margin-right: 4px;
  border-radius: 3px;
  border: solid 1px #c0c0c0;
  background: #e9e9e9;
  box-shadow: inset 0px 1px 0px rgba(255, 255, 255, 0.8), 0px 1px 3px rgba(0, 0, 0, 0.1);
  font-size: .875em;
  font-weight: bold;
  text-decoration: none;
  color: #717171;
  text-shadow: 0px 1px 0px white;
}

.page:hover,
.page.gradient:hover {
  background: #fefefe;
  background: -moz-linear-gradient(0% 0% 270deg, #FEFEFE, #f0f0f0);
  text-decoration: none;
  color: inherit;
}

.page.active {
  border: none;
  background: #616161;
  box-shadow: inset 0px 0px 8px rgba(0, 0, 0, 0.5), 0px 1px 0px rgba(255, 255, 255, 0.8);
  color: #f0f0f0;
  text-shadow: 0px 0px 3px rgba(0, 0, 0, 0.5);
}

.page.gradient {
  background: -moz-linear-gradient(0% 0% 270deg, #f8f8f8, #e9e9e9);
}

.pagination.dark {
  background: #414449;
  color: #feffff;
}

.page.dark {
  border: solid 1px #32373b;
  background: #3e4347;
  box-shadow: inset 0px 1px 1px rgba(255, 255, 255, 0.1), 0px 1px 3px rgba(0, 0, 0, 0.1);
  color: #feffff;
  text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.5);
}

.page.dark:hover,
.page.dark.gradient:hover {
  background: #3d4f5d;
  background: -moz-linear-gradient(0% 0% 270deg, #547085, #3d4f5d);
}

.page.dark.active {
  border: none;
  background: #2f3237;
  box-shadow: inset 0px 0px 8px rgba(0, 0, 0, 0.5), 0px 1px 0px rgba(255, 255, 255, 0.1);
}

.page.dark.gradient {
  background: -moz-linear-gradient(0% 0% 270deg, #565b5f, #3e4347);
}

@media only screen and (min-width: 960px) {
  .padding-right\@m {
    padding-right: 15px !important;
  }

  .padding-left\@m {
    padding-left: 15px !important;
  }
}

/* -------------------------------------------------------------------------
		print.scss
------------------------------------------------------------------------- */

@media print {
  /* IE zoom
	------------------------------------------------- */

  /* for IE6 or older */

  * html body {
    zoom: 0.7;
  }

  /* for IE7 */

  * + html body {
    zoom: 1;
  }
}

/**
 * selectize.css (v0.12.4)
 * Copyright (c) 2013–2015 Brian Reavis & contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the License at:
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
 * ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 *
 * @author Brian Reavis <brian@thirdroute.com>
 */

.selectize-control.plugin-drag_drop.multi > .selectize-input > div.ui-sortable-placeholder {
  visibility: visible !important;
  background: #f2f2f2 !important;
  background: rgba(0, 0, 0, 0.06) !important;
  border: 0 none !important;
  box-shadow: inset 0 0 12px 4px #ffffff;
}

.selectize-control.plugin-drag_drop .ui-sortable-placeholder::after {
  content: '!';
  visibility: hidden;
}

.selectize-control.plugin-drag_drop .ui-sortable-helper {
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.selectize-dropdown-header {
  position: relative;
  padding: 5px 8px;
  border-bottom: 1px solid #d0d0d0;
  background: #f8f8f8;
  border-radius: 3px 3px 0 0;
}

.selectize-dropdown-header-close {
  position: absolute;
  right: 8px;
  top: 50%;
  color: #303030;
  opacity: 0.4;
  margin-top: -12px;
  line-height: 20px;
  font-size: 20px !important;
}

.selectize-dropdown-header-close:hover {
  color: #000000;
}

.selectize-dropdown.plugin-optgroup_columns .optgroup {
  border-right: 1px solid #f2f2f2;
  border-top: 0 none;
  float: left;
  box-sizing: border-box;
}

.selectize-dropdown.plugin-optgroup_columns .optgroup:last-child {
  border-right: 0 none;
}

.selectize-dropdown.plugin-optgroup_columns .optgroup:before {
  display: none;
}

.selectize-dropdown.plugin-optgroup_columns .optgroup-header {
  border-top: 0 none;
}

.selectize-control.plugin-remove_button [data-value] {
  position: relative;
  padding-right: 24px !important;
}

.selectize-control.plugin-remove_button [data-value] .remove {
  z-index: 1;
  /* fixes ie bug (see #392) */
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  width: 17px;
  text-align: center;
  font-weight: bold;
  font-size: 12px;
  color: inherit;
  text-decoration: none;
  vertical-align: middle;
  display: inline-block;
  padding: 2px 0 0 0;
  border-left: 1px solid #d0d0d0;
  border-radius: 0 2px 2px 0;
  box-sizing: border-box;
}

.selectize-control.plugin-remove_button [data-value] .remove:hover {
  background: rgba(0, 0, 0, 0.05);
}

.selectize-control.plugin-remove_button [data-value].active .remove {
  border-left-color: #cacaca;
}

.selectize-control.plugin-remove_button .disabled [data-value] .remove:hover {
  background: none;
}

.selectize-control.plugin-remove_button .disabled [data-value] .remove {
  border-left-color: #ffffff;
}

.selectize-control.plugin-remove_button .remove-single {
  position: absolute;
  right: 28px;
  top: 6px;
  font-size: 23px;
}

.selectize-control {
  position: relative;
}

.selectize-dropdown,
.selectize-input,
.selectize-input input {
  color: #303030;
  font-family: inherit;
  font-size: 13px;
  line-height: 18px;
  -webkit-font-smoothing: inherit;
}

.selectize-input,
.selectize-control.single .selectize-input.input-active {
  background: #ffffff;
  cursor: text;
  display: inline-block;
}

.selectize-input {
  border: 1px solid #d0d0d0;
  padding: 8px 8px;
  display: inline-block;
  width: 100%;
  overflow: hidden;
  position: relative;
  z-index: 1;
  box-sizing: border-box;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.1);
  border-radius: 3px;
}

.selectize-control.multi .selectize-input.has-items {
  padding: 6px 8px 3px;
}

.selectize-input.full {
  background-color: #ffffff;
}

.selectize-input.disabled,
.selectize-input.disabled * {
  cursor: default !important;
}

.selectize-input.focus {
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.15);
}

.selectize-input.dropdown-active {
  border-radius: 3px 3px 0 0;
}

.selectize-input > * {
  vertical-align: baseline;
  display: -moz-inline-stack;
  display: inline-block;
  zoom: 1;
  *display: inline;
}

.selectize-control.multi .selectize-input > div {
  cursor: pointer;
  margin: 0 3px 3px 0;
  padding: 2px 6px;
  background: #f2f2f2;
  color: #303030;
  border: 0 solid #d0d0d0;
}

.selectize-control.multi .selectize-input > div.active {
  background: #e8e8e8;
  color: #303030;
  border: 0 solid #cacaca;
}

.selectize-control.multi .selectize-input.disabled > div,
.selectize-control.multi .selectize-input.disabled > div.active {
  color: #7d7d7d;
  background: #ffffff;
  border: 0 solid #ffffff;
}

.selectize-input > input {
  display: inline-block !important;
  padding: 0 !important;
  min-height: 0 !important;
  max-height: none !important;
  max-width: 100% !important;
  margin: 0 2px 0 0 !important;
  text-indent: 0 !important;
  border: 0 none !important;
  background: none !important;
  line-height: inherit !important;
  -webkit-user-select: auto !important;
  box-shadow: none !important;
}

.selectize-input > input::-ms-clear {
  display: none;
}

.selectize-input > input:focus {
  outline: none !important;
}

.selectize-input::after {
  content: ' ';
  display: block;
  clear: left;
}

.selectize-input.dropdown-active::before {
  content: ' ';
  display: block;
  position: absolute;
  background: #f0f0f0;
  height: 1px;
  bottom: 0;
  left: 0;
  right: 0;
}

.selectize-dropdown {
  position: absolute;
  z-index: 10;
  border: 1px solid #d0d0d0;
  background: #ffffff;
  margin: -1px 0 0 0;
  border-top: 0 none;
  box-sizing: border-box;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  border-radius: 0 0 3px 3px;
}

.selectize-dropdown [data-selectable] {
  cursor: pointer;
  overflow: hidden;
}

.selectize-dropdown [data-selectable] .highlight {
  background: rgba(125, 168, 208, 0.2);
  border-radius: 1px;
}

.selectize-dropdown [data-selectable],
.selectize-dropdown .optgroup-header {
  padding: 5px 8px;
}

.selectize-dropdown .optgroup:first-child .optgroup-header {
  border-top: 0 none;
}

.selectize-dropdown .optgroup-header {
  color: #303030;
  background: #ffffff;
  cursor: default;
}

.selectize-dropdown .active {
  background-color: #f5fafd;
  color: #495c68;
}

.selectize-dropdown .active.create {
  color: #495c68;
}

.selectize-dropdown .create {
  color: rgba(48, 48, 48, 0.5);
}

.selectize-dropdown-content {
  overflow-y: auto;
  overflow-x: hidden;
  max-height: 200px;
  -webkit-overflow-scrolling: touch;
}

.selectize-control.single .selectize-input,
.selectize-control.single .selectize-input input {
  cursor: pointer;
}

.selectize-control.single .selectize-input.input-active,
.selectize-control.single .selectize-input.input-active input {
  cursor: text;
}

.selectize-control.single .selectize-input:after {
  content: ' ';
  display: block;
  position: absolute;
  top: 50%;
  right: 15px;
  margin-top: -3px;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 5px 5px 0 5px;
  border-color: #808080 transparent transparent transparent;
}

.selectize-control.single .selectize-input.dropdown-active:after {
  margin-top: -4px;
  border-width: 0 5px 5px 5px;
  border-color: transparent transparent #808080 transparent;
}

.selectize-control.rtl.single .selectize-input:after {
  left: 15px;
  right: auto;
}

.selectize-control.rtl .selectize-input > input {
  margin: 0 4px 0 -2px !important;
}

.selectize-control .selectize-input.disabled {
  opacity: 0.5;
  background-color: #fafafa;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */